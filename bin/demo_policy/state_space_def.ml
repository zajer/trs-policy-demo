open Bigraph

let deact_uav_lhs = 
"
{(0, B:0),(1, UAV:0)}
1 2 1
100
011
000
" |> Big.of_string
let deact_uav_rhs = 
"
{(0, B:0),(1, DUAV:0)}
1 2 1
100
011
000
" |> Big.of_string
let deploy_data_lhs =
"
{(0, B:0),(1, UAV:0),(2, DU:0)}
1 3 1
1000
0101
0010
0000
" |> Big.of_string
let deploy_data_rhs =
"
{(0, B:0),(1, UAV:0),(2, DU:0)}
1 3 1
1000
0111
0000
0000
" |> Big.of_string
let downloadData_lhs = 
"
{(0, A:4),(1, UAV:0),(2, DS:0),(3, DU:0)}
1 4 2
100000
011010
000000
000101
000000
({}, {b1}, {(0, 1)})
({}, {l1}, {(0, 1)})
({}, {r1}, {(0, 1)})
({}, {t1}, {(0, 1)})
" |> Big.of_string
let downloadData_rhs =
"
{(0, A:4),(1, UAV:0),(2, DU:0),(3, DS:0)}
1 4 2
100000
010110
001000
000000
000001
({}, {b1}, {(0, 1)})
({}, {l1}, {(0, 1)})
({}, {r1}, {(0, 1)})
({}, {t1}, {(0, 1)})
" |> Big.of_string
let move_into_base_lhs =
"
{(0, A:4),(1, UAV:0),(2, B:0)}
1 3 3
100000
011010
000100
000001
({}, {b1}, {(0, 1)})
({}, {l1}, {(0, 1)})
({}, {r1}, {(0, 1)})
({}, {t1}, {(0, 1)})
" |> Big.of_string
let move_into_base_rhs =
"
{(0, A:4),(1, B:0),(2, UAV:0)}
1 3 3
100000
010100
001001
000010
({}, {b1}, {(0, 1)})
({}, {l1}, {(0, 1)})
({}, {r1}, {(0, 1)})
({}, {t1}, {(0, 1)})
" |> Big.of_string
let move_out_of_base_lhs =
"
{(0, A:4),(1, B:0),(2, UAV:0)}
1 3 3
100000
010100
001001
000010
({}, {b1}, {(0, 1)})
({}, {l1}, {(0, 1)})
({}, {r1}, {(0, 1)})
({}, {t1}, {(0, 1)})
" |> Big.of_string
let move_out_of_base_rhs =
"
{(0, A:4),(1, UAV:0),(2, B:0)}
1 3 3
100000
011010
000100
000001
({}, {b1}, {(0, 1)})
({}, {l1}, {(0, 1)})
({}, {r1}, {(0, 1)})
({}, {t1}, {(0, 1)})
" |> Big.of_string
let move_lhs =
"
{(0, A:4),(1, UAV:0),(2, A:4)}
1 3 3
101000
010010
000100
000001
({}, {b1}, {(0, 1)})
({}, {b2}, {(2, 1)})
({}, {l1}, {(0, 1)})
({}, {r1}, {(0, 1), (2, 1)})
({}, {r2}, {(2, 1)})
({}, {t1}, {(0, 1)})
({}, {t2}, {(2, 1)})
" |> Big.of_string
let move_rhs = 
"
{(0, A:4),(1, A:4),(2, UAV:0)}
1 3 3
110000
000100
001001
000010
({}, {b1}, {(0, 1)})
({}, {b2}, {(1, 1)})
({}, {l1}, {(0, 1)})
({}, {r1}, {(0, 1), (1, 1)})
({}, {r2}, {(1, 1)})
({}, {t1}, {(0, 1)})
({}, {t2}, {(1, 1)})
" |> Big.of_string
let s0 = 
"
{(0, A:4),(1, B:0),(2, UAV:0),(3, A:4),(4, DS:0),(5, DU:0)}
0 6 0
011000
000000
000000
000010
000001
000000
({}, {}, {(0, 1)})
({}, {}, {(0, 1)})
({}, {}, {(0, 1)})
({}, {}, {(0, 1), (3, 1)})
({}, {}, {(3, 1)})
({}, {}, {(3, 1)})
({}, {}, {(3, 1)})
" |> Big.of_string